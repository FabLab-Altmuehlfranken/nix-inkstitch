From 46a677a13c302211deabd361a08496eb005e9fea Mon Sep 17 00:00:00 2001
From: tropf <tropf@noreply.codeberg.org>
Date: Tue, 8 Aug 2023 22:06:01 +0200
Subject: [PATCH 5/9] rework electron build and invocation

For the electron part of the upstream inkstitch the application is
either used through the command `yarn dev` (during development) or
through a bundled and compiled binary. The application itself is built
in a two-stage process, where the first stage generates a main.js from a
vue application, and the second stage bundles this script into a
standalone electron application.

For nix, we only build this main.js, but start it through the electron
wrapper. To invoke the correct electron, this patch actually invokes
`inkstitch-electron`, which is a symlinked/wrapped electron version.
---
 Makefile            |  1 -
 bin/build-electron  |  2 +-
 lib/gui/electron.py | 20 +++++---------------
 3 files changed, 6 insertions(+), 17 deletions(-)

diff --git a/Makefile b/Makefile
index c4e21410..d24ea65e 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,6 @@ dist: version locales inx
 	python bin/generate-flaskserverport-file
 	bash bin/build-python
 	bash bin/build-electron
-	bash bin/build-distribution-archives
 
 distclean:
 	rm -rf build dist inx locales artifacts win mac *.spec *.tar.gz *.zip electron/node_modules electron/dist electron/build/mac electron/build/mac-arm64 electron/build/win-ia32-unpacked electron/build/linux-unpacked electron/build/linux-arm64-unpacked electron/src/lib/flaskserverport.json
diff --git a/bin/build-electron b/bin/build-electron
index cdc98f9d..4c46f77a 100755
--- a/bin/build-electron
+++ b/bin/build-electron
@@ -19,4 +19,4 @@ fi
 cd electron
 which yarn > /dev/null 2>&1 || npm install -g yarn
 yarn --link-duplicates --pure-lockfile
-yarn run dist ${args}
+yarn run just-build
diff --git a/lib/gui/electron.py b/lib/gui/electron.py
index 4178ef87..c9465f5a 100755
--- a/lib/gui/electron.py
+++ b/lib/gui/electron.py
@@ -21,7 +21,7 @@ def open_url(url, port, pdf=False):  # noqa: C901
         os.environ['FLASKPORT'] = str(port)
 
         # this creates the .json for dev mode to get translations
-        if getattr(sys, 'frozen', None) is None:
+        if False:
             dynamic_port = {
                 "_comment1": "port should not be declared when commiting",
                 "port": port,
@@ -32,21 +32,11 @@ def open_url(url, port, pdf=False):  # noqa: C901
     else:
         url = f'http://{url}:{port}/'
 
-    cwd = None
     searchstring = "http"
+    electron_app_path = os.path.join(get_bundled_dir("electron"), "dist", "electron", "main.js")
+    command = ["inkstitch-electron", electron_app_path, url]
+    cwd = get_bundled_dir("electron")
 
-    if getattr(sys, 'frozen', None) is not None:
-        electron_path = os.path.join(get_bundled_dir("electron"), "inkstitch-gui")
-
-        if sys.platform == "darwin":
-            electron_path = os.path.join(sys._MEIPASS, "electron", "inkstitch-gui.app", "Contents", "MacOS", "inkstitch-gui")
-            command = ["open", "-W", "-a", electron_path, "--args", url]
-        else:
-            command = [electron_path, url]
-    else:
-        # if we're not running in a pyinstaller bundle, run electron directly
-        command = ["yarn", "dev", url]
-        cwd = get_bundled_dir("electron")
 
     # Any output on stdout will crash inkscape.
     # In macos manual install the python env paths are incomplete
@@ -69,7 +59,7 @@ def open_url(url, port, pdf=False):  # noqa: C901
         with open(os.devnull, 'w') as null:
             return subprocess.Popen(command, cwd=cwd, stdout=null, env=mac_dev_env)
     else:
-        if searchstring in url and getattr(sys, 'frozen', None) is None:
+        if False:
             with open(os.devnull, 'w') as null:
                 subprocess.Popen(["yarn", "just-build"], cwd=cwd, stdout=null).wait()
         else:
-- 
2.40.1

